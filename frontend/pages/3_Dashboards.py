import streamlit as st
from modules.auth import require_login
from modules.carregar_cenarios import carregar_cenarios
from modules.nav import Navbar
from modules.dashboard import gerar_dashboard

Navbar()
require_login()

st.title("游늵 Dashboards dos Cen치rios")

cenarios = carregar_cenarios()
nomes_cenarios = list(cenarios.keys())

if not nomes_cenarios:
  st.warning("丘멆잺 Nenhum cen치rio dispon칤vel.")
  st.stop()

cenario_selecionado = st.selectbox("Selecione um cen치rio", nomes_cenarios)

if st.button("Gerar Dashboard"):
  try:
    dados_cenario = cenarios[cenario_selecionado]
    figs = gerar_dashboard(dados_cenario)  # lista de figuras

    # Criar abas para separar gr치ficos
    tabs = st.tabs([
      "Demanda & Rotas",
      "Tipos de 칎nibus",
      "Solu칞칚o & Headway",
      "Par칙metros & Objetivo"
    ])

    # 1. Demanda & Rotas
    with tabs[0]:
      if len(figs) > 0:
        st.plotly_chart(figs[0], use_container_width=True)
      else:
        st.info("Sem dados de demanda por rota.")

    # 2. Tipos de 칎nibus
    with tabs[1]:
      if len(figs) > 1:
        st.plotly_chart(figs[1], use_container_width=True)
      else:
        st.info("Sem dados de tipos de 칪nibus.")

    # 3. Solu칞칚o & Headway
    with tabs[2]:
      if len(figs) > 2:
        # Colunas lado a lado para dois gr치ficos
        col1, col2 = st.columns(2)
        col1.plotly_chart(figs[2], use_container_width=True)
        if len(figs) > 3:
          col2.plotly_chart(figs[3], use_container_width=True)
        else:
          col2.info("Sem dados de headway.")
      else:
        st.info("Sem dados da solu칞칚o otimizada.")

    # 4. Par칙metros & Objetivo
    with tabs[3]:
      # Exibe m칠tricas e par칙metros (essas partes devem estar sendo renderizadas dentro do gerar_dashboard)
      # Se n칚o, pode retornar separadamente e exibir aqui
      parametros = dados_cenario.get("parameters", [])
      if parametros:
        st.subheader("丘뙖잺 Par칙metros do Modelo")
        st.json(parametros[0])
      else:
        st.info("Sem par칙metros dispon칤veis.")

      solutions = dados_cenario.get("solutions", [])
      if solutions and solutions[0].get("objective_value") is not None:
        st.metric("游꿢 Valor Objetivo da Solu칞칚o", round(solutions[0]["objective_value"], 2))
      else:
        st.info("Sem valor objetivo dispon칤vel.")

  except Exception as e:
    st.error(f"Erro ao gerar dashboard: {e}")
